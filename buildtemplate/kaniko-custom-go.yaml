apiVersion: build.knative.dev/v1alpha1
kind: BuildTemplate
metadata:
  name: kaniko-custom-go
  namespace: default
spec:
  parameters:
  - description: The URI of the image to push, including registry host
    name: IMAGE
  - default: latest
    description: Tag of the image being pushed
    name: TAG
  - default: ""
    description: The subdirectory of the workspace/repo
    name: DIRECTORY
  steps:
  - args:
    - -c
    - |
      cd /workspace/${DIRECTORY}
      cat <<EOF > Dockerfile
      FROM golang:alpine
        RUN apk --no-cache add git \
        && go get github.com/triggermesh/aws-custom-runtime \
        && go get github.com/triggermesh/knative-lambda-runtime/go-1.x \
        && go get github.com/golang/dep/...

        WORKDIR /go/src/handler
        COPY . .
        RUN if [ -f "Gopkg.toml" ]; then dep ensure; fi
        RUN go get -v && go install

        FROM alpine
        WORKDIR /opt

        ENV LAMBDA_TASK_ROOT "/opt"
        ENV _HANDLER "handler"

        COPY --from=0 /go/bin/go-1.x /opt/bootstrap
        COPY --from=0 /go/bin/ /opt

        ENTRYPOINT ["/opt/aws-custom-runtime"]
      EOF
    command:
    - /busybox/sh
    image: gcr.io/kaniko-project/executor:debug
    name: dockerfile
  - args:
    - --context=/workspace/${DIRECTORY}
    - --dockerfile=/workspace/${DIRECTORY}/Dockerfile
    - --destination=${IMAGE}:${TAG}
    image: gcr.io/kaniko-project/executor
    name: export